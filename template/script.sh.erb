#!/usr/bin/env bash

# borrows from
# https://www.rocker-project.org/use/singularity/
# https://www.rc.virginia.edu/userinfo/howtos/rivanna/launch-rserver/

# Load the required environment
module use /software/el9/modulefiles
module load apptainer
#export SINGULARITY_BIND="/project,/opt,/local,/90daydata,$TMPDIR"
#
export SINGULARITY_BIND=$(tr '\n' ',' <<END
/bin/sacct
/bin/salloc
/bin/sbatch
/bin/scancel
/bin/scontrol
/bin/scrontab
/bin/sinfo
/bin/squeue
/bin/srun
/bin/sshare
/bin/sstat
/etc/nsswitch.conf
/etc/passwd
/etc/slurm
/etc/sssd
/lib64/libnss_sss.so.2:/lib/libnss_sss.so.2
/run/munge
/system
/usr/lib64/libmunge.so.2
/usr/lib64/slurm
/var/lib/sss
/etc/profile.d
/usr/share/lmod
/project
/opt
/local
/90daydata
$TMPDIR
END
)

#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Set OMP_NUM_THREADS to prevent OpenBLAS (and any other OpenMP-enhanced
  # libraries used by R) from spawning more threads than the number of processors
  # allocated to the job.
  export OMP_NUM_THREADS=${SLURM_JOB_CPUS_PER_NODE}

  # Set R_LIBS_USER to a path specific to rocker/rstudio to avoid conflicts with
  # personal libraries from any R installation in the host environment
  export R_LIBS_USER="~/R/RStudio-%p-library/%v"
  mkdir -p ${R_LIBS_USER}

  # Change RStudio state/config dirs
  # https://docs.rstudio.com/ide/server-pro/r_sessions/customizing_session_settings.html
  export XDG_DATA_HOME=${WORK_DIR}/.ondemand/${USER}/share
  mkdir -p ${XDG_DATA_HOME}
  export XDG_CONFIG_HOME=${WORK_DIR}/.ondemand/${USER}/config
  mkdir -p ${XDG_CONFIG_HOME}
  export XDG_STATE_HOME=${WORK_DIR}/.ondemand/${USER}/state
  mkdir -p ${XDG_STATE_HOME}

  export SLURM_EXPORT_ENV=HOME,SHELL,TERM,MODULEPATH
  SBATCH_EXPORT=NONE

  # copy in work directory
  export WORK_DIR=${WORK_DIR}

  # Do not suspend idle sessions.
  # Alternative to setting session-timeout-minutes=0 in /etc/rstudio/rsession.conf
  # https://github.com/rstudio/rstudio/blob/v1.4.1106/src/cpp/server/ServerSessionManager.cpp#L126
  export RSTUDIO_SESSION_TIMEOUT=0

  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"

  exec &>>"\${RSESSION_LOG_FILE}"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec /usr/lib/rstudio-server/bin/rsession --r-libs-user "${R_LIBS_USER}" \
                "\${@}" \

EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Set working directory
cd "${WORK_DIR}"

# Make temporary directory
export TMPDIR="$(mktemp -d)"

mkdir -p "$TMPDIR/tmp/rstudio-server"
python -c 'from uuid import uuid4; print(uuid4())' > "$TMPDIR/tmp/rstudio-server/secure-cookie-key"
chmod 0600 "$TMPDIR/tmp/rstudio-server/secure-cookie-key"
mkdir -p ${TMPDIR}/var/{lib,run}

# make Rprofile
export RPROFILE_SITE="${TMPDIR}/Rprofile.site"
(
umask 077
sed 's/^ \{2\}//' > "${RPROFILE_SITE}" << EOL
  setwd(Sys.getenv("WORK_DIR"))
EOL
)
chmod 700 "${RPROFILE_SITE}"

set -x
# Launch the RStudio Server
echo "Starting up rserver..."

echo Hot wired
RSTUDIO_SERVER_IMAGE=/reference/containers/RStudio/<%= context.version %>/rocker-geospatial.sif
#RSTUDIO_SERVER_IMAGE=/reference/containers/RStudio/4.1.2/rocker_4.1.2.sif
#-B ${RPROFILE_SITE}:/usr/local/lib/R/etc/Rprofile.site \

if [ <%= context.version %> = "3.6.0" ]; then


	singularity exec \
    		-B $TMPDIR/var/lib:/var/lib/rstudio-server \
    		-B $TMPDIR/var/run:/var/run/rstudio-server \
    		-B $TMPDIR/tmp:/tmp \
                -B /dev/null:${HOME}/.Renviron \
    		"$RSTUDIO_SERVER_IMAGE" \
    		rserver \
    		--www-port "${port}" \
    		--auth-none 0 \
    		--auth-pam-helper-path "${RSTUDIO_AUTH}" \
    		--auth-encrypt-password 0 \
    		--server-user "${USER}" \
    		--rsession-path "${RSESSION_WRAPPER_FILE}"

else

	singularity exec \
    		-B $TMPDIR/var/lib:/var/lib/rstudio-server \
    		-B $TMPDIR/var/run:/var/run/rstudio-server \
    		-B $TMPDIR/tmp:/tmp \
                -B /dev/null:${HOME}/.Renviron \
    		"$RSTUDIO_SERVER_IMAGE" \
    		rserver \
    		--www-port "${port}" \
    		--auth-none 0 \
    		--auth-pam-helper-path "${RSTUDIO_AUTH}" \
    		--auth-encrypt-password 0 \
    		--server-user "${USER}" \
    		--auth-timeout-minutes=0 \
    		--auth-stay-signed-in-days=30 \
    		--rsession-path "${RSESSION_WRAPPER_FILE}"

fi

echo 'Singularity as exited...'
